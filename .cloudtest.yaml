version: 1.0
root: "./.tests/cloud_test/"
timeout: 3600 # 1 hour total timeout
providers:
  - name: "packet"
    kind: "packet"
    instances: 2
    retry: 0
    node-count: 2
    enabled: true
    timeout: 1800 # 30 minutes to start cluster
    env:
      - CLUSTER_RULES_PREFIX=null # To not add any specific code
      - KUBECONFIG=$(tempdir)/config
    env-check:
      - PACKET_AUTH_TOKEN
      - PACKET_PROJECT_ID
      - COMMIT
    packet:
      ssh-key: sshkey.pub   # A key name relative to $(tempdir) or absolute
      devices:
        - name: "Master"
          plan: "t1.small.x86"
          os: "ubuntu_16_04"
          billing_cycle: "hourly"
        - name: "Worker"
          plan: "t1.small.x86"
          os: "ubuntu_16_04"
          billing_cycle: "hourly"
      facilities:
        - baremetal
        - layer_2
        - global_ipv4
      preferred-facility: sjc1
    scripts:
      install: "echo all deps installed"
      setup: |
        ssh-keygen -t rsa -f $(tempdir)/sshkey -q -N ""
        ssh-add $(tempdir)/sshkey
      start: ./.cloudtest/packet/create-kubernetes-cluster.sh $(device.Master.pub.ip.4) $(device.Worker.pub.ip.4)
      prepare: make k8s-config
  - name: "gke"
    kind: "shell"
    instances: 2
    retry: 5
    node-count: 2
    enabled: true
    timeout: 1800 # 30 minutes to start cluster
    env:
      - GKE_PROJECT_ID=ci-management
      - CLUSTER_RULES_PREFIX=gke
      - GKE_CLUSTER_NAME=$(cluster-name)-$(date)-$(uuid10)
      - CONTAINER_REPO=networkservicemesh
      - KUBECONFIG=$(tempdir)/config
      - GKE_CLUSTER_ZONE=$(zone-selector)
      - GKE_CLUSTER_TYPE=n1-standard-2
      - GKE_CLUSTER_NUM_NODES=2
    env-check:
      - GCLOUD_SERVICE_KEY
      - COMMIT
    scripts:
      install: ./.cloudtest/gke/init.sh
      zone-selector: ./.cloudtest/gke/list_zones.sh ci-management # List zones, but it need GKE_PROJECT_ID to be passed.
      start: make gke-start
      stop: make gke-destroy
      #config: # We do not need it since we put KUBECONFIG into env.
      prepare: make k8s-config
  - name: "Kind"
    kind: "shell"
    instances: 1
    node-count: 3
    retry: 10
    enabled: false
    timeout: 300 # 5 minutes to start cluster
    stop-delay: 10
    env:
      - CLUSTER_RULES_PREFIX=kind
    scripts:
      start: |
        make kind-config
        make kind-start
      stop: make kind-stop
      config: make kind-config-location
      prepare: |
        make k8s-load-images
        make k8s-config

  - name: "Vagrant"
    kind: "shell"
    instances: 1
    retry: 3
    node-count: 2
    enabled: false
    timeout: 900 # 15 minutes to start cluster
    env:
      - CLUSTER_RULES_PREFIX=vagrant
      - CONTAINER_BUILD_PREFIX=docker
      - CONTAINER_REPO=networkservicemesh
    scripts:
      start: |
        make vagrant-start
      config: make vagrant-config-location
      prepare: |
        make k8s-load-images
        make k8s-config
      stop: make vagrant-suspend
reporting:
  junit-report: "results/junit.xml"
executions:
  - name: "Single cluster tests"
    tags:
      - basic
      - recover
      - usecase
      - bench
    root: ./test/integration
    timeout: 300
    cluster-count: 1
    kubernetes-env:
      - KUBECONFIG
